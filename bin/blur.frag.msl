#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wmissing-braces"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

template<typename T, size_t Num>
struct spvUnsafeArray
{
    T elements[Num ? Num : 1];
    
    thread T& operator [] (size_t pos) thread
    {
        return elements[pos];
    }
    constexpr const thread T& operator [] (size_t pos) const thread
    {
        return elements[pos];
    }
    
    device T& operator [] (size_t pos) device
    {
        return elements[pos];
    }
    constexpr const device T& operator [] (size_t pos) const device
    {
        return elements[pos];
    }
    
    constexpr const constant T& operator [] (size_t pos) const constant
    {
        return elements[pos];
    }
    
    threadgroup T& operator [] (size_t pos) threadgroup
    {
        return elements[pos];
    }
    constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
    {
        return elements[pos];
    }
};

constant spvUnsafeArray<int2, 5> _44 = spvUnsafeArray<int2, 5>({ int2(0), int2(0, -1), int2(0, 1), int2(-1, 0), int2(1, 0) });

struct main0_out
{
    float4 outColor [[color(0)]];
};

fragment main0_out main0(texture2d<float> readImage [[texture(0)]], float4 gl_FragCoord [[position]])
{
    main0_out out = {};
    float4 color = float4(0.0);
    for (int i = 0; i < 5; i++)
    {
        int2 position = int2(gl_FragCoord.xy) + _44[i];
        float4 otherColor = readImage.read(uint2(position));
        if (length(otherColor) > length(color))
        {
            color = otherColor;
        }
    }
    out.outColor = color;
    return out;
}

